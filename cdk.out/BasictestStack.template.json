{
 "Resources": {
  "Address079826E9": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "postcode",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "postcode",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Address/Resource"
   }
  },
  "GetAllTodosLambdaHandlerServiceRoleF0585033": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/GetAllTodosLambdaHandler/ServiceRole/Resource"
   }
  },
  "GetAllTodosLambdaHandlerServiceRoleDefaultPolicyC482C5E0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Address079826E9",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAllTodosLambdaHandlerServiceRoleDefaultPolicyC482C5E0",
    "Roles": [
     {
      "Ref": "GetAllTodosLambdaHandlerServiceRoleF0585033"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/GetAllTodosLambdaHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAllTodosLambdaHandler2650293E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f18dc064f786335cfe57d5b62d2260cee1c91361c9d7306f35a190c6a831d320.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetAllTodosLambdaHandlerServiceRoleF0585033",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TODO_TABLE_NAME": {
       "Ref": "Address079826E9"
      }
     }
    },
    "Handler": "getHandler.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "GetAllTodosLambdaHandlerServiceRoleDefaultPolicyC482C5E0",
    "GetAllTodosLambdaHandlerServiceRoleF0585033"
   ],
   "Metadata": {
    "aws:cdk:path": "BasictestStack/GetAllTodosLambdaHandler/Resource",
    "aws:asset:path": "asset.f18dc064f786335cfe57d5b62d2260cee1c91361c9d7306f35a190c6a831d320",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PutTodoLambdaHandlerServiceRoleF5A85331": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/PutTodoLambdaHandler/ServiceRole/Resource"
   }
  },
  "PutTodoLambdaHandlerServiceRoleDefaultPolicy8888D0EC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Address079826E9",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PutTodoLambdaHandlerServiceRoleDefaultPolicy8888D0EC",
    "Roles": [
     {
      "Ref": "PutTodoLambdaHandlerServiceRoleF5A85331"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/PutTodoLambdaHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PutTodoLambdaHandler12702868": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f18dc064f786335cfe57d5b62d2260cee1c91361c9d7306f35a190c6a831d320.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "PutTodoLambdaHandlerServiceRoleF5A85331",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TODO_TABLE_NAME": {
       "Ref": "Address079826E9"
      }
     }
    },
    "Handler": "saveHandler.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "PutTodoLambdaHandlerServiceRoleDefaultPolicy8888D0EC",
    "PutTodoLambdaHandlerServiceRoleF5A85331"
   ],
   "Metadata": {
    "aws:cdk:path": "BasictestStack/PutTodoLambdaHandler/Resource",
    "aws:asset:path": "asset.f18dc064f786335cfe57d5b62d2260cee1c91361c9d7306f35a190c6a831d320",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TutestApiD8E43CAD": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Tu_testApi"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Resource"
   }
  },
  "TutestApiDeploymentF8A5EE7A7dd5346a05701cb789d8aad9b831f10f": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "TutestApiuserAddressGET6362999B",
    "TutestApiuserAddressPOST5F2B54C7",
    "TutestApiuserAddress62FCC9DD"
   ],
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Deployment/Resource"
   }
  },
  "TutestApiDeploymentStageprod7BA0F058": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    },
    "DeploymentId": {
     "Ref": "TutestApiDeploymentF8A5EE7A7dd5346a05701cb789d8aad9b831f10f"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/DeploymentStage.prod/Resource"
   }
  },
  "TutestApiuserAddress62FCC9DD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TutestApiD8E43CAD",
      "RootResourceId"
     ]
    },
    "PathPart": "userAddress",
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/Resource"
   }
  },
  "TutestApiuserAddressGETApiPermissionBasictestStackTutestApi786CED28GETuserAddressD497EC8E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllTodosLambdaHandler2650293E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/",
       {
        "Ref": "TutestApiDeploymentStageprod7BA0F058"
       },
       "/GET/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/GET/ApiPermission.BasictestStackTutestApi786CED28.GET..userAddress"
   }
  },
  "TutestApiuserAddressGETApiPermissionTestBasictestStackTutestApi786CED28GETuserAddressA32E9A83": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllTodosLambdaHandler2650293E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/test-invoke-stage/GET/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/GET/ApiPermission.Test.BasictestStackTutestApi786CED28.GET..userAddress"
   }
  },
  "TutestApiuserAddressGET6362999B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "TutestApiuserAddress62FCC9DD"
    },
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAllTodosLambdaHandler2650293E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/GET/Resource"
   }
  },
  "TutestApiuserAddressPOSTApiPermissionBasictestStackTutestApi786CED28POSTuserAddress4D9F99A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PutTodoLambdaHandler12702868",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/",
       {
        "Ref": "TutestApiDeploymentStageprod7BA0F058"
       },
       "/POST/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/POST/ApiPermission.BasictestStackTutestApi786CED28.POST..userAddress"
   }
  },
  "TutestApiuserAddressPOSTApiPermissionTestBasictestStackTutestApi786CED28POSTuserAddress0E2D2E17": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PutTodoLambdaHandler12702868",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/test-invoke-stage/POST/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/POST/ApiPermission.Test.BasictestStackTutestApi786CED28.POST..userAddress"
   }
  },
  "TutestApiuserAddressPOST5F2B54C7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "TutestApiuserAddress62FCC9DD"
    },
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PutTodoLambdaHandler12702868",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQQU/DMAyFfwv3NDAmAddtiBtiGtwnNzHFa5NUtcNUVf3vJOkQ4+TPL88vce7106O+u4EzV8a2VUe1nt4FTKuSdJzs6MEFm8QPqDtUu09fYFYduNqCnl6iN0LB56Nr3uPgiDl1syJwejqEZb7UfejIjMVXaFa8PgIzCutNLqnX22halC0wKuipAcEzjCkIWTY9lawLPmPfhdGhl6xedWmVpty6QPKHOBgsmb/NJWjhV5SvYLO00Dz/+crDchD5JjveovRR/o0n3gVvScrePljUJ779Xj3o1Tp984mJqiF6IYf6sNQfQaYWSIIBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "TutestApiEndpointC1CB4BA9": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TutestApiD8E43CAD"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TutestApiDeploymentStageprod7BA0F058"
      },
      "/"
     ]
    ]
   }
  },
  "APIURL": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TutestApiD8E43CAD"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TutestApiDeploymentStageprod7BA0F058"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}