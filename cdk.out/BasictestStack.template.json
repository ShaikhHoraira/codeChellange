{
 "Resources": {
  "Address079826E9": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "UserId",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "UserIdIndex",
      "KeySchema": [
       {
        "AttributeName": "UserId",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "UserId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "Tu_Test_TableName"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Address/Resource"
   }
  },
  "GetCustomerAddressLambdaHandlerServiceRole786DF370": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonDynamoDBFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/GetCustomerAddressLambdaHandler/ServiceRole/Resource"
   }
  },
  "GetCustomerAddressLambdaHandlerCCDB626B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a41f25d21c5f81b9e2c5cf2c6b10718452c854185e2918a28a2d952f44a9ce65.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "Address079826E9"
      }
     }
    },
    "Handler": "getHandler.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetCustomerAddressLambdaHandlerServiceRole786DF370",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "GetCustomerAddressLambdaHandlerServiceRole786DF370"
   ],
   "Metadata": {
    "aws:cdk:path": "BasictestStack/GetCustomerAddressLambdaHandler/Resource",
    "aws:asset:path": "asset.a41f25d21c5f81b9e2c5cf2c6b10718452c854185e2918a28a2d952f44a9ce65",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PutCustomerAddressLambdaHandlerServiceRoleFE514554": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/PutCustomerAddressLambdaHandler/ServiceRole/Resource"
   }
  },
  "PutCustomerAddressLambdaHandlerServiceRoleDefaultPolicy9C43330A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Address079826E9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Address079826E9",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PutCustomerAddressLambdaHandlerServiceRoleDefaultPolicy9C43330A",
    "Roles": [
     {
      "Ref": "PutCustomerAddressLambdaHandlerServiceRoleFE514554"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/PutCustomerAddressLambdaHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PutCustomerAddressLambdaHandler07E01801": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a41f25d21c5f81b9e2c5cf2c6b10718452c854185e2918a28a2d952f44a9ce65.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "Address079826E9"
      }
     }
    },
    "Handler": "saveHandler.handler",
    "Role": {
     "Fn::GetAtt": [
      "PutCustomerAddressLambdaHandlerServiceRoleFE514554",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "PutCustomerAddressLambdaHandlerServiceRoleDefaultPolicy9C43330A",
    "PutCustomerAddressLambdaHandlerServiceRoleFE514554"
   ],
   "Metadata": {
    "aws:cdk:path": "BasictestStack/PutCustomerAddressLambdaHandler/Resource",
    "aws:asset:path": "asset.a41f25d21c5f81b9e2c5cf2c6b10718452c854185e2918a28a2d952f44a9ce65",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TutestApiD8E43CAD": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Tu_testApi"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Resource"
   }
  },
  "TutestApiDeploymentF8A5EE7A0d283200b5d8a150fb59cc9c477ede8a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    }
   },
   "DependsOn": [
    "TutestApiuserAddressGET6362999B",
    "TutestApiuserAddressPOST5F2B54C7",
    "TutestApiuserAddress62FCC9DD"
   ],
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Deployment/Resource"
   }
  },
  "TutestApiDeploymentStageprod7BA0F058": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "TutestApiDeploymentF8A5EE7A0d283200b5d8a150fb59cc9c477ede8a"
    },
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/DeploymentStage.prod/Resource"
   }
  },
  "TutestApiuserAddress62FCC9DD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TutestApiD8E43CAD",
      "RootResourceId"
     ]
    },
    "PathPart": "userAddress",
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/Resource"
   }
  },
  "TutestApiuserAddressGETApiPermissionBasictestStackTutestApi786CED28GETuserAddressD497EC8E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCustomerAddressLambdaHandlerCCDB626B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/",
       {
        "Ref": "TutestApiDeploymentStageprod7BA0F058"
       },
       "/GET/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/GET/ApiPermission.BasictestStackTutestApi786CED28.GET..userAddress"
   }
  },
  "TutestApiuserAddressGETApiPermissionTestBasictestStackTutestApi786CED28GETuserAddressA32E9A83": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCustomerAddressLambdaHandlerCCDB626B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/test-invoke-stage/GET/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/GET/ApiPermission.Test.BasictestStackTutestApi786CED28.GET..userAddress"
   }
  },
  "TutestApiuserAddressGET6362999B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCustomerAddressLambdaHandlerCCDB626B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TutestApiuserAddress62FCC9DD"
    },
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/GET/Resource"
   }
  },
  "TutestApiuserAddressPOSTApiPermissionBasictestStackTutestApi786CED28POSTuserAddress4D9F99A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PutCustomerAddressLambdaHandler07E01801",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/",
       {
        "Ref": "TutestApiDeploymentStageprod7BA0F058"
       },
       "/POST/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/POST/ApiPermission.BasictestStackTutestApi786CED28.POST..userAddress"
   }
  },
  "TutestApiuserAddressPOSTApiPermissionTestBasictestStackTutestApi786CED28POSTuserAddress0E2D2E17": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PutCustomerAddressLambdaHandler07E01801",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TutestApiD8E43CAD"
       },
       "/test-invoke-stage/POST/userAddress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/POST/ApiPermission.Test.BasictestStackTutestApi786CED28.POST..userAddress"
   }
  },
  "TutestApiuserAddressPOST5F2B54C7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PutCustomerAddressLambdaHandler07E01801",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TutestApiuserAddress62FCC9DD"
    },
    "RestApiId": {
     "Ref": "TutestApiD8E43CAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Default/userAddress/POST/Resource"
   }
  },
  "TutestApiApiKeyAD0371B0": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Enabled": true,
    "Name": "tuApiKey",
    "StageKeys": [
     {
      "RestApiId": {
       "Ref": "TutestApiD8E43CAD"
      },
      "StageName": {
       "Ref": "TutestApiDeploymentStageprod7BA0F058"
      }
     }
    ],
    "Value": "thisIsJustSampleAPi123"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/ApiKey/Resource"
   }
  },
  "TutestApiTuapiusageplan57979E68": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "TutestApiD8E43CAD"
      },
      "Stage": {
       "Ref": "TutestApiDeploymentStageprod7BA0F058"
      },
      "Throttle": {}
     }
    ],
    "UsagePlanName": "api-usage-plan"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Tu_api-usage-plan/Resource"
   }
  },
  "TutestApiTuapiusageplanUsagePlanKeyResourceBasictestStackTutestApiApiKeyD3D0FC17C291082B": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "TutestApiApiKeyAD0371B0"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "TutestApiTuapiusageplan57979E68"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/Tu_testApi/Tu_api-usage-plan/UsagePlanKeyResource:BasictestStackTutestApiApiKeyD3D0FC17"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QTW+DMAyGf0vvwWvhsmvLtEs1raLbuTLEpS6QoNqsQoj/PhGY1kk7vY8/8tpODJvkGdYrvEtU2CqqOYfhqFhUBu9yGmzvsPE2h+ED85pMenYBRlNjk1uE4bVzhbJ3U+mRD3RrWIS9Gw1jA0Pm5/dBD77mog99gUYjyQlFSAW2kxhJYNcVFekOhQy2XKLSHXsYMhLdthy8FnyhtvZ9Q06n7EN0VCzD1BkyEt/dCgqeP8FiNPMb6cXbKbXQtuU9hU0X+hQs6VBjuPL/YE/9OP76h4OmBdiVU997p22nf8amZ5d6Z1nDfzlvCa7y9BWvYRNDvLoKc3TrnHJDkM36Dd2wLKm7AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "BasictestStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "TutestApiEndpointC1CB4BA9": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TutestApiD8E43CAD"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TutestApiDeploymentStageprod7BA0F058"
      },
      "/"
     ]
    ]
   }
  },
  "APIURL": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TutestApiD8E43CAD"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TutestApiDeploymentStageprod7BA0F058"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}