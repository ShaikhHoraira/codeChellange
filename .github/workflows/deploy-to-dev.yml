name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on push to the main branch
      - develop  # Also trigger pipeline on push to the development branch
      - setupSecretForApi
  pull_request:
    branches:
      - main  # Trigger pipeline on pull requests to the main branch
      - develop  # Also trigger pipeline on pull requests to the development branch
      - setupSecretForApi

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          npm install  # Adjust based on your project's requirements

      - name: Install TypeScript
        run: npm install -g typescript

      - name: Compile TypeScript
        run: tsc  # Assuming your TypeScript files are in the default 'src' directory
  test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          npm install  # Adjust based on your project's requirements

      - name: Run Tests
        run: npm run test  # Adjust based on your project's testing command
        
  deploy:
    name: Deploy to AWS Lambda (branchingApi)
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/develop'  # Only deploy on changes to development branch

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Install TypeScript
        run: npm install -g typescript

      - name: Install Dependencies
        run: npm install

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v1
        with:
          sam-version: 'latest'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Build SAM Application
        run: sam build --use-container

      - name: Deploy AWS CDK Stack
        run: cdk deploy --no-confirm-changeset --no-fail-on-empty-changeset --require-approval never --stack-name BasictestStack
