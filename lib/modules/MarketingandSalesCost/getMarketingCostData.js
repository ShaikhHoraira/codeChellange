"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetMarketingCostData = void 0;
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const TABLE_NAME = process.env.TABLE_NAME || '';
const region = process.env.REGION;
const ddbClient = new client_dynamodb_1.DynamoDBClient({ region });
class GetMarketingCostData {
    constructor(marketingInvoiceId) {
        this.marketingInvoiceId = marketingInvoiceId;
    }
    async getMarketingData() {
        const params = {
            TableName: TABLE_NAME,
            IndexName: "MarketingInvoiceIdIndex",
            KeyConditionExpression: "MarketingInvoiceId = :marketingInvoiceId",
            ExpressionAttributeValues: {
                ":marketingInvoiceId": { S: this.marketingInvoiceId }, // Specifying string type for userId
            },
        };
        try {
            const data = await ddbClient.send(new client_dynamodb_1.QueryCommand(params));
            return data.Items ?? []; // Return empty array if no items found
        }
        catch (error) {
            console.error("Error querying DynamoDB:", error);
            // Implement your specific error handling logic here
            return []; // Return empty array to avoid potential downstream errors
        }
    }
}
exports.GetMarketingCostData = GetMarketingCostData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TWFya2V0aW5nQ29zdERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kdWxlcy9NYXJrZXRpbmdhbmRTYWxlc0Nvc3QvZ2V0TWFya2V0aW5nQ29zdERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQXdFO0FBRXhFLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQztBQUNoRCxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUVsQyxNQUFNLFNBQVMsR0FBRyxJQUFJLGdDQUFjLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBRWpELE1BQWEsb0JBQW9CO0lBRy9CLFlBQVksa0JBQTBCO1FBQ3BDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztJQUMvQyxDQUFDO0lBRU0sS0FBSyxDQUFDLGdCQUFnQjtRQUMzQixNQUFNLE1BQU0sR0FBc0I7WUFDaEMsU0FBUyxFQUFFLFVBQVU7WUFDckIsU0FBUyxFQUFFLHlCQUF5QjtZQUNwQyxzQkFBc0IsRUFBRSwwQ0FBMEM7WUFDbEUseUJBQXlCLEVBQUU7Z0JBQ3pCLHFCQUFxQixFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLG9DQUFvQzthQUM1RjtTQUNGLENBQUM7UUFHRixJQUFJO1lBQ0YsTUFBTSxJQUFJLEdBQUcsTUFBTSxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksOEJBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzVELE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQyx1Q0FBdUM7U0FDakU7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLE9BQU8sQ0FBQyxLQUFLLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDakQsb0RBQW9EO1lBQ3BELE9BQU8sRUFBRSxDQUFDLENBQUMsMERBQTBEO1NBQ3RFO0lBQ0gsQ0FBQztDQUNGO0FBM0JELG9EQTJCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtb0RCQ2xpZW50LCBRdWVyeUNvbW1hbmQgfSBmcm9tIFwiQGF3cy1zZGsvY2xpZW50LWR5bmFtb2RiXCI7XG5cbmNvbnN0IFRBQkxFX05BTUUgPSBwcm9jZXNzLmVudi5UQUJMRV9OQU1FIHx8ICcnO1xuY29uc3QgcmVnaW9uID0gcHJvY2Vzcy5lbnYuUkVHSU9OO1xuXG5jb25zdCBkZGJDbGllbnQgPSBuZXcgRHluYW1vREJDbGllbnQoeyByZWdpb24gfSk7XG5cbmV4cG9ydCBjbGFzcyBHZXRNYXJrZXRpbmdDb3N0RGF0YSB7XG4gIHB1YmxpYyBtYXJrZXRpbmdJbnZvaWNlSWQ6IHN0cmluZztcbiAgXG4gIGNvbnN0cnVjdG9yKG1hcmtldGluZ0ludm9pY2VJZDogc3RyaW5nKSB7XG4gICAgdGhpcy5tYXJrZXRpbmdJbnZvaWNlSWQgPSBtYXJrZXRpbmdJbnZvaWNlSWQ7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgZ2V0TWFya2V0aW5nRGF0YSgpOiBQcm9taXNlPGFueVtdPiB7XG4gICAgY29uc3QgcGFyYW1zOiBRdWVyeUNvbW1hbmRJbnB1dCA9IHtcbiAgICAgIFRhYmxlTmFtZTogVEFCTEVfTkFNRSxcbiAgICAgIEluZGV4TmFtZTogXCJNYXJrZXRpbmdJbnZvaWNlSWRJbmRleFwiLCAvLyBBc3N1bWluZyB5b3VyIHNlY29uZGFyeSBpbmRleCBuYW1lXG4gICAgICBLZXlDb25kaXRpb25FeHByZXNzaW9uOiBcIk1hcmtldGluZ0ludm9pY2VJZCA9IDptYXJrZXRpbmdJbnZvaWNlSWRcIixcbiAgICAgIEV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXM6IHtcbiAgICAgICAgXCI6bWFya2V0aW5nSW52b2ljZUlkXCI6IHsgUzogdGhpcy5tYXJrZXRpbmdJbnZvaWNlSWQgfSwgLy8gU3BlY2lmeWluZyBzdHJpbmcgdHlwZSBmb3IgdXNlcklkXG4gICAgICB9LFxuICAgIH07XG5cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgZGRiQ2xpZW50LnNlbmQobmV3IFF1ZXJ5Q29tbWFuZChwYXJhbXMpKTtcbiAgICAgIHJldHVybiBkYXRhLkl0ZW1zID8/IFtdOyAvLyBSZXR1cm4gZW1wdHkgYXJyYXkgaWYgbm8gaXRlbXMgZm91bmRcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHF1ZXJ5aW5nIER5bmFtb0RCOlwiLCBlcnJvcik7XG4gICAgICAvLyBJbXBsZW1lbnQgeW91ciBzcGVjaWZpYyBlcnJvciBoYW5kbGluZyBsb2dpYyBoZXJlXG4gICAgICByZXR1cm4gW107IC8vIFJldHVybiBlbXB0eSBhcnJheSB0byBhdm9pZCBwb3RlbnRpYWwgZG93bnN0cmVhbSBlcnJvcnNcbiAgICB9XG4gIH1cbn1cblxuaW50ZXJmYWNlIFF1ZXJ5Q29tbWFuZElucHV0IHtcbiAgVGFibGVOYW1lOiBzdHJpbmc7XG4gIEluZGV4TmFtZT86IHN0cmluZztcbiAgS2V5Q29uZGl0aW9uRXhwcmVzc2lvbjogc3RyaW5nO1xuICBFeHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7IFtrZXk6IHN0cmluZ106IER5bmFtb0RCQXR0cmlidXRlVmFsdWUgfTsgLy8gSW50ZXJmYWNlIGZvciB0eXBlIHNhZmV0eVxuICBGaWx0ZXJFeHByZXNzaW9uPzogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgRHluYW1vREJBdHRyaWJ1dGVWYWx1ZSB7XG4gIFM6IHN0cmluZzsgLy8gRXhhbXBsZTogU3RyaW5nIGRhdGEgdHlwZVxuICAvLyBBZGQgb3RoZXIgZGF0YSB0eXBlcyBhcyBuZWVkZWQgKGUuZy4sIE4gZm9yIG51bWJlcilcbn1cbiJdfQ==